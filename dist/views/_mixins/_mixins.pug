mixin headingPrimary(text = 'heading')
    p.h3.mb-3.pb-3.border-bottom.text-uppercase= text

mixin fromControl(props = {type: 'text', lable: 'lable', field: 'field', class: '', feedback: '' }) 
    .mb-3
        label.form-label(for=props.field)= props.label
        if props.type === 'textarea'
            textarea.form-control.get-data(
                class=props.class || ''
                v-model=props.field 
                id=props.field 
                type=props.type || 'text' 
                name=props.field 
                placeholder=props.placeholder || 'Vui lòng nhập'
            )
        else 
            input.form-control.get-data(
                class=props.class || ''
                v-model=props.field 
                id=props.field 
                type=props.type || 'text' 
                name=props.field 
                placeholder=props.placeholder || 'Vui lòng nhập'
            )
        //.invalid-feedback=props.field 

mixin fromSelect(props = {lable: 'lable', field: 'field', options: [] }) 
    .mb-3
        label.form-label(for=props.field)= props.label
        select.form-select.get-data(
            aria-label=props.field 
            name=props.field 
            id=props.field 
            class=props.class || ''
        )
            option() Vui lòng chọn
            each el in props.options
                option(value=el.value)= el.text

mixin toast(props = {})
    .toast-container.position-fixed.top-0.end-0.p-2
        .toast(id=props.id || 'liveToast' role='alert', aria-live='assertive', aria-atomic='true')
            .toast-header
                strong.me-auto Thông báo
                button.btn-close(type='button', data-bs-dismiss='toast', aria-label='Close')
            .toast-body= props.text


mixin itemContent(props = { title: '', time: '', description: '' })
    .item
        .d-flex.between
            .title props.title
            .time props.time
        .description props.description
