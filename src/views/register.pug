extends ./_layouts/_blank

block vars
  -title        = 'Đăng ký | Nodojs Resume API'
  -description  = ''
  -keywords     = ''
  -pageID       = 'register'
  -path         = '.'

block container
   
    .container.pt-4
        .clearfix.mx-auto(style="max-width: 500px")
            +headingPrimary('Đăng ký')
           
            form(class="needs-validation")
                +fromControl({ field: 'email', label: "Email address", placeholder: 'Vui lòng nhập email'  })
                +fromControl({ field: 'password', label: "Password", type: 'password', placeholder: 'Vui lòng nhập mật khẩu' })
                +fromControl({ field: 'repassword', label: "Password", type: 'password', placeholder: 'Vui lòng nhập lại mật khẩu' })
                button.btn.btn-sm.btn-primary(type='button' style="min-width: 100px" :disabled="!allowSubmit" @click="handleRegister()") Đăng ký
            if errors
                .text-danger
                    each err in errors
                        p err
            div.errors.pt-3(v-if="hasErrors && hasErrors?.length")
                ul.list-group.list-group-flush.text-danger
                    li.list-group-item.text-danger.px-0(v-for="(err, i) in hasErrors" :key="`err_${i}`" v-text="err")
                        
block script
    script(src="https://unpkg.com/vue@3/dist/vue.global.js")
    script(src="./js/index.js")
    script.
        
        const { createApp, ref, computed } = Vue;
        createApp({
            setup() {
                const email = ref('golezabyn@mailinator.com'),
                    password = ref('123'),
                    repassword = ref('1234'),
                    hasErrors = ref([]);
                
                return {
                    email,
                    password,
                    repassword,
                    hasErrors
                }
            },
            methods: {
                
                handleRegister: async function () {
                    const _sefl = this;
                    const { email, password } = _sefl;
                    
                    const res = await fetch('/register', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            email: email,
                            password: password
                        })
                    });

                    if (res.status === 200) return;

                    const { errors } = await res.json();
                    _sefl.hasErrors = errors;

                }
            },
            computed: {
                allowSubmit() {
                    const _sefl = this;

                    let _flag = true;

                    !_sefl.email && (_flag = false);
                    !_sefl.password && (_flag = false);
                    (_sefl.password !== _sefl.repassword) && (_flag = false);

                    return true
                }
            }
        }).mount('#app')